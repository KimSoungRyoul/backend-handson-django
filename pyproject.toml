[tool.poetry]
name = "djangobackendprogramming"
version = "0.1.0"
description = "한빛미디어 '처음 시작하는 장고' 학습용 예제 코드"
authors = ["SoungRyoul Kim <KimSoungRyoul@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.9.1"
django = "^3.1.3"
djangorestframework = "^3.12.2"
django-filter = "^2.4.0"
drf-spectacular = "0.12.0"
django-extensions = "^3.0.9"
drf-nested-routers = "^0.92.1"
requests = "^2.25.1"
psycopg2-binary = "^2.8.6"
ipython = {extras = ["notebook"], version = "^7.19.0"}
Werkzeug = "^1.0.1"
bootstrap-admin = "^0.4.4"
channels = "^3.0.3"
mypy = "^0.812"
django-stubs = "^1.8.0"
djangorestframework-stubs = "^1.4.0"
models = "^0.9.3"


[tool.poetry.dev-dependencies]
pre-commit = "^2.9.3"
black = "^20.8b1"
pytest = "^6.1.2"
pytest-django = "^3.10.0"
pytest-mock = "^3.4.0"
pytest-freezegun = "^0.4.2"
pytest-mypy-plugins = "^1.7.0"


[tool.poetry.extras]
production = [ "psycopg2", "Collectfast", "django-storages", "dj-database-url"]


[tool.black]
line-length = 120
target-version = ['py38']
include = '\.pyi?$'
exclude = '''

(
  /(
      \.eggs         # exclude a few common directories in the
    | \.git          # root of the project
    | \.hg
    | \.mypy_cache
    | \.tox
    | \.venv
    | _build
    | buck-out
    | build
    | dist
    | node_modules
    | docs
    | venv
    | templates
  )
)
'''

[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.9"
check_untyped_defs = true
disallow_any_generics = true
disallow_untyped_calls = true
disallow_untyped_decorators = true
ignore_errors = false
ignore_missing_imports = true
implicit_reexport = false
strict_optional = true
strict_equality = true
no_implicit_optional = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true
warn_unreachable = true
warn_no_return = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]


[tool.django-stubs]
django_settings_module = "config.settings"
