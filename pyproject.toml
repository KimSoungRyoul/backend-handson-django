[tool.poetry]
name = "pycon-django-sprints-auth-server"
version = "1.0.0"
description = "OAuthServer"
authors = ["soungryoulkim <kimsoungryoul@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11.0"


# django
django = "4.2.4"
djangorestframework = "3.14.0"
channels = "^4.0.0"

# pyi stub library
django-stubs = "4.2.3"
djangorestframework-stubs = "3.14.2"
django-stubs-ext = "4.2.2"


# django 생태계
django-redis = "5.3.0"
django-extensions = "3.2.3"
django-oauth-toolkit = "2.3.0"
drf-spectacular = "0.26.4"
django-cors-headers = "4.2.0"
django-mysql = "4.11.0"
django-storages = "1.13.2"

# django-doeenv 가 있지만 어려울것같아서 py dotenv로 대체
python-dotenv = "1.0.0"

# 배포
uvicorn = "^0.23.2"
gunicorn = "21.2.0"

# http client
httpx = "0.24.1"

# mypy
mypy = "^1.2"

# infrastructure
PyJWT = "2.4.0"
pymysql = "1.1.0"
boto3 = "^1.21.16"
celery = { extras = ["sqs"], version = "5.3.1" } # celery[sqs]
#pip install --no-cache-dir --compile --ignore-installed --install-option="--with-openssl" --install-option="--openssl-dir=/opt/homebrew/opt/openssl@3" pycurl
pycurl = "7.45.2"
pillow = "^10.0.0"


[tool.poetry.group.dev.dependencies]
ipython = "^8.3.0"
pre-commit = "^2.9.3"
Werkzeug = "^2.0.3"
black = "^23.3.0"


[tool.poetry.group.test.dependencies]
freezegun = "^1.2.2"


[tool.black]
line-length = 120
target-version = ['py311']
include = '\.pyi?$'


[tool.isort]
profile = "black"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.mypy]
python_version = "3.11"
ignore_missing_imports = true
plugins = ["mypy_django_plugin.main", "mypy_drf_plugin.main"]


[tool.django-stubs]
django_settings_module = "config.settings"
